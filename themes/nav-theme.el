(deftheme nav
  "Created 2018-03-07.")

(custom-theme-set-faces
 'nav
 '(cursor ((t (:background "orange red"))))
 '(fixed-pitch ((t (:family "Monospace"))))
 '(variable-pitch ((((type w32)) (:foundry "outline" :family "Arial")) (t (:family "Sans Serif"))))
 '(escape-glyph ((t (:foreground "#c4a000"))))
 '(minibuffer-prompt ((t (:foreground "#b4fa70"))))
 '(highlight ((t (:background "steel blue" :foreground "#2e3436"))))
 '(region ((t (:background "#555753"))))
 '(shadow ((((class color grayscale) (min-colors 88) (background light)) (:foreground "grey50")) (((class color grayscale) (min-colors 88) (background dark)) (:foreground "grey70")) (((class color) (min-colors 8) (background light)) (:foreground "green")) (((class color) (min-colors 8) (background dark)) (:foreground "yellow"))))
 '(secondary-selection ((t (:background "#204a87"))))
 '(trailing-whitespace ((t (:background "#a40000"))))
 '(font-lock-builtin-face ((t (:foreground "#e090d7"))))
 '(font-lock-comment-delimiter-face ((t (:inherit (font-lock-comment-face)))))
 '(font-lock-comment-face ((t (:foreground "#73d216"))))
 '(font-lock-constant-face ((t (:foreground "#e9b2e3"))))
 '(font-lock-doc-face ((t (:inherit (font-lock-string-face)))))
 '(font-lock-function-name-face ((t (:foreground "#fce94f"))))
 '(font-lock-keyword-face ((t (:foreground "#b4fa70"))))
 '(font-lock-negation-char-face ((t nil)))
 '(font-lock-preprocessor-face ((t (:inherit (font-lock-builtin-face)))))
 '(font-lock-regexp-grouping-backslash ((t (:inherit (bold)))))
 '(font-lock-regexp-grouping-construct ((t (:inherit (bold)))))
 '(font-lock-string-face ((t (:foreground "#e9b96e"))))
 '(font-lock-type-face ((t (:foreground "#8cc4ff"))))
 '(font-lock-variable-name-face ((t (:foreground "#fcaf3e"))))
 '(font-lock-warning-face ((t (:inherit (error)))))
 '(button ((t (:inherit (link)))))
 '(link ((t (:underline (:color foreground-color :style line) :foreground "#729fcf"))))
 '(link-visited ((t (:underline (:color foreground-color :style line) :foreground "#3465a4"))))
 '(fringe ((t (:background "#212526"))))
 '(vertical-border ((t (:foreground "#212526" :background "#212526"))))
 '(header-line ((t (:box nil :foreground "grey90" :background "grey20" :inherit (mode-line)))))
 '(tooltip ((t (:foreground "black" :background "lightyellow" :inherit (variable-pitch)))))
 '(mode-line-inactive ((t (:foreground "light gray" :background "gray20"))))
 '(mode-line-buffer-id ((t (:weight bold :foreground "lightyellow"))))
 '(mode-line-emphasis ((t (:weight bold))))
 '(markdown-code-face ((t (:inherit (font-lock-keyword-face)))))
 '(org-todo ((t (:weight bold :foreground "tomato"))))
 '(ediff-even-diff-Ancestor ((t (:background "gray15"))))
 '(ediff-even-diff-A ((t (:background "gray50"))))
 '(ediff-even-diff-B ((t (:background "gray25"))))
 '(ediff-even-diff-C ((t (:background "DarkGoldenrod4"))))
 '(ediff-odd-diff-Ancestor ((t (:background "gray10"))))
 '(ediff-odd-diff-A ((t (:background "gray45"))))
 '(ediff-odd-diff-B ((t (:background "gray50"))))
 '(ediff-odd-diff-C ((t (:background "gray25"))))
 '(markdown-code-face ((t (:inherit nil))))
 '(which-func ((t (:foreground "#b4fa70"))))
 '(mode-line-highlight ((t (:box (:line-width 2 :color "grey40" :style released-button)))))
 '(mode-line ((t (:background "#555753" :foreground "#eeeeec" ))))
 '(isearch ((t (:foreground "#eeeeec" :background "#ce5c00"))))
 '(isearch-fail ((((class color) (min-colors 88) (background light)) (:background "RosyBrown1")) (((class color) (min-colors 88) (background dark)) (:background "red4")) (((class color) (min-colors 16)) (:background "red")) (((class color) (min-colors 8)) (:background "red")) (((class color grayscale)) (:foreground "grey")) (t (:inverse-video t))))
 '(lazy-highlight ((t (:background "#8f5902"))))
 '(match ((((class color) (min-colors 88) (background light)) (:background "yellow1")) (((class color) (min-colors 88) (background dark)) (:background "RoyalBlue3")) (((class color) (min-colors 8) (background light)) (:foreground "black" :background "yellow")) (((class color) (min-colors 8) (background dark)) (:foreground "white" :background "blue")) (((type tty) (class mono)) (:inverse-video t)) (t (:background "gray"))))
 '(next-error ((t (:inherit (region)))))
 '(query-replace ((t (:inherit (isearch)))))
 '(default ((t (:inherit nil :stipple nil :background "#121212" :foreground "#eeeeec" :inverse-video nil :box nil :strike-through nil :overline nil :underline nil :slant normal :weight normal :height 113 :width normal :foundry "unknown" :family "Monospace")))))

(provide-theme 'nav)
